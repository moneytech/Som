-- generated by SomLjVirtualMachine on Sa. Aug. 29 23:05:07 2020

local metaclass = Benchmark
local class = Benchmark._class
local function _block(f) local t = { _f = f }; setmetatable(t,Block._class); return t end
local _str = _primitives._newString
local _sym = _primitives._newSymbol
local _dbl = _primitives._newDouble
local _cl = _primitives._checkLoad

function class.run(self)
	local harness
	harness = (All):new();
	(harness):initialize();
	(harness):benchmarkClass_((self):class());
	(harness):printAll_(false);
	(harness):maxRuntime_((3));
	(harness):numIterations_((100));
	(harness):warmUp_((10));
	(harness):runBenchmark();
	(harness):printTotal();
	return self
end

function class.oneTimeSetup(self)
end

function class.innerBenchmarkLoop_(self,innerIterations)
	local _nonLocal, _nlRes
	local _status, _pcallRes = pcall( function()
		local i
		i = (0);
		(_block( function()
						return (i):_0l(innerIterations)
		end )):whileTrue_(_block( function()
			((self):verifyResult_((self):benchmark())):ifFalse_(_block( function()
				_nlRes = false; _nonLocal = true; error(_nlRes)
			end ));
			i = (i):_0p((1))
			return i
		end ));
		return true;
	end )
	if _status then return _pcallRes elseif _nonLocal then return _nlRes else error(_pcallRes) end
end

function class.benchmark(self)
	(self):subclassResponsibility();
	return self
end

function class.verifyResult_(self,result)
	(self):subclassResponsibility();
	return self
end

function class.name(self)
	return (((self):class()):name()):asString();
end

function class.assert_equals_(self,expected,value)
	((expected):_0q(value)):ifFalse_(_block( function()
				return (self):error_(((((_str("Expected value (")):_0p((expected):asString())):_0p(_str(") differs from actual ("))):_0p((value):asString())):_0p(_str(") benchmark result.")))
	end ));
	return true;
end

