-- generated by SomLjVirtualMachine on Sa. Aug. 29 23:05:07 2020

local metaclass = Permute
local class = Permute._class
local function _block(f) local t = { _f = f }; setmetatable(t,Block._class); return t end
local _str = _primitives._newString
local _sym = _primitives._newSymbol
local _dbl = _primitives._newDouble
local _cl = _primitives._checkLoad

function class.benchmark(self)
	self[1] = (0);
	self[2] = (Array):new_((7));
	(self):permute_((6));
	return self[1];
end

function class.verifyResult_(self,result)
	return (self):assert_equals_((8660),result);
end

function class.permute_(self,n)
	self[1] = (self[1]):_0p((1));
	((n):_0lg((0))):ifTrue_(_block( function()
		(self):permute_((n):_0m((1)));
				return (n):downTo_do_((1),_block( function(i)
			(self):swap_with_(n,i);
			(self):permute_((n):_0m((1)));
						return (self):swap_with_(n,i)
		end ))
	end ));
	return self
end

function class.swap_with_(self,i,j)
	local tmp
	tmp = (self[2]):at_(i);
	(self[2]):at_put_(i,(self[2]):at_(j));
	(self[2]):at_put_(j,tmp);
	return self
end

