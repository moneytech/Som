-- generated by SomLjVirtualMachine on Sa. Aug. 29 23:05:07 2020

local metaclass = ListElement
local class = ListElement._class
local function _block(f) local t = { _f = f }; setmetatable(t,Block._class); return t end
local _str = _primitives._newString
local _sym = _primitives._newSymbol
local _dbl = _primitives._newDouble
local _cl = _primitives._checkLoad

function class.length(self)
	local _nonLocal, _nlRes
	local _status, _pcallRes = pcall( function()
		((self[2]):isNil()):ifTrue_ifFalse_(_block( function()
			_nlRes = (1); _nonLocal = true; error(_nlRes)
		end ),_block( function()
			_nlRes = ((1)):_0p((self[2]):length()); _nonLocal = true; error(_nlRes)
		end ));
		return self
	end )
	if _status then return _pcallRes elseif _nonLocal then return _nlRes else error(_pcallRes) end
end

function class.val(self)
	return self[1];
end

function class.val_(self,n)
	self[1] = n;
	return self
end

function class.next(self)
	return self[2];
end

function class.next_(self,element)
	self[2] = element;
	return self
end

function metaclass.new_(self,n)
	return (self._super.new(self)):val_(n);
end

