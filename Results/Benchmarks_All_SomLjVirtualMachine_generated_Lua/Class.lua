-- generated by SomLjVirtualMachine on Sa. Aug. 29 23:05:07 2020

local metaclass = Class
local class = Class._class
local function _block(f) local t = { _f = f }; setmetatable(t,Block._class); return t end
local _str = _primitives._newString
local _sym = _primitives._newSymbol
local _dbl = _primitives._newDouble
local _cl = _primitives._checkLoad

function class.asString(self)
	return ((self):name()):asString();
end

function class.selectors(self)
	return ((self):methods()):collect_(_block( function(inv)
				return (inv):signature()
	end ));
end

function class.hasMethod_(self,aSymbol)
	local _nonLocal, _nlRes
	local _status, _pcallRes = pcall( function()
		((self):methods()):do_(_block( function(m)
						return (((m):signature()):_0q(aSymbol)):ifTrue_(_block( function()
				_nlRes = true; _nonLocal = true; error(_nlRes)
			end ))
		end ));
		return false;
	end )
	if _status then return _pcallRes elseif _nonLocal then return _nlRes else error(_pcallRes) end
end

